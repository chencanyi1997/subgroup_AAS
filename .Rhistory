knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
options(warn = -1) # suppress warings globally
library(tidyverse)
library(glmnet)
library(PRIMsrc)
library(hrbrthemes)
library(Amelia) ## for missmap
library(viridis)
library(plotly)
install.packages("ncvreg")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
options(warn = -1) # suppress warings globally
library(tidyverse)
library(glmnet)
library(PRIMsrc)
library(hrbrthemes)
library(Amelia) ## for missmap
library(viridis)
library(plotly)
?Real.2
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
options(warn = -1) # suppress warings globally
library(tidyverse)
library(glmnet)
library(PRIMsrc)
library(hrbrthemes)
library(Amelia) ## for missmap
library(viridis)
library(plotly)
head(Real.2[,1:10])
tail(Real.2[,1:10])
dim(Real.2)
head(Real.2[,1:10])
tail(Real.2[,1:10])
dim(Real.2)
str(Real.2[,1:10])
summary(Real.2[,1:10])
(colSums(Real.2==0)/ncol(Real.2))[1:10] ## zero-inflate effect
missmap(Real.2)
install.packages("Rtsne")
library(Ckmeans.1d.dp)
install.packages(Ckmeans.1d.dp)
install.packages("Ckmeans.1d.dp")
library(Ckmeans.1d.dp)
??Ckmeans.1d.dp
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
options(warn = -1) # suppress warings globally
library(tidyverse)
library(glmnet)
library(PRIMsrc)
library(hrbrthemes)
library(Amelia) ## for missmap
library(viridis)
library(plotly)
library(Ckmeans.1d.dp)
head(Real.2[,1:10])
tail(Real.2[,1:10])
dim(Real.2)
str(Real.2[,1:10])
summary(Real.2[,1:10])
(colSums(Real.2==0)/ncol(Real.2))[1:10] ## zero-inflate effect
x <- Real.2[,-c(1)] %>% apply(2, as.numeric)
y <- Real.2$y
cvfit <- cv.glmnet(x,y)
plot(cvfit)
beta <- coef(cvfit,s="lambda.min")
beta <- beta[2:length(beta)]
yhat <- x%*%beta
res = y - x %*% beta
res = res %>% as.data.frame
colnames(res) = "ires"
ggplot(res, aes(x = ires, y = ..density..)) +
geom_histogram(fill = "cornsilk", colour = "grey60", size = 0.2)+ geom_density() + xlim(-2, 1)
Ckmeans.1d.dp(res)
res
Ckmeans.1d.dp(res)
Ckmeans.1d.dp(as.numeric(res))
res
as.double(res)
res[[1]]
Ckmeans.1d.dp(res[[1]])
result <- Ckmeans.1d.dp(res[[1]])
plot(result)
result$cluster
result$BIC
result <- Ckmeans.1d.dp(res[[1]],2)
plot(result)
plot(res[[1]], col=result$cluster, pch=result$cluster, cex=1.5,
main="Optimal univariate clustering with k estimated",
sub=paste("Number of clusters is estimated to be", k))
plot(res[[1]], col=result$cluster, pch=result$cluster, cex=1.5,
main="Optimal univariate clustering with k estimated",
sub=paste("Number of clusters is estimated to be", 2))
?Ckmeans.1d.dp
?bic
?BIC
??Ckmeans.1d.dp
result$cluster
result$centers
beta
find(beta)
sum(abs(beta)>0)
?kmeans
kmeans(re)
kmeans(res)
res
kmeans(res,2)
dim(X)
dim(x)
(n,p) <- dim(x)
computeBIC <- function(X, y, muh, betah, c = 10) {
s <- sum(abs(betah)>0)
n <- dim(X)[1]
p <- dim(X)[2]
Qn <- sum((y-muh-X%*%betah)^2)/n
df <- k+p;
bic <- log(Qn) + c*log(log(n+p))*log(n)/n*df;
}
r <- Ckmeans.1d.dp(res[[1]],2)
r
r$centers
r$cluster
center <- r$centers
center[r$cluster]
n <- dim(x)[1]
karr <- seq(kL,kU)
kL <- 1
kU <- n-1
karr <- seq(kL,kU)
karr
bicarr <- -1*rep(1,length(karr))
i <- karr[1]
i
r <- Ckmeans.1d.dp(res[[1]],i)
muh <- r$centers[r$cluster]
muh
y
bicarr[i] <- computeBIC(x,y,muh,beta)
computeBIC <- function(X, y, muh, betah, c = 10) {
s <- sum(abs(betah)>0)
n <- dim(X)[1]
p <- dim(X)[2]
Qn <- sum((y-muh-X%*%betah)^2)/n
df <- k+p;
bic <- log(Qn) + c*log(log(n+p))*log(n)/n*df;
}
computeBIC <- function(X, y, muh, betah, k, c = 10) {
s <- sum(abs(betah)>0)
n <- dim(X)[1]
p <- dim(X)[2]
Qn <- sum((y-muh-X%*%betah)^2)/n
df <- k+p;
bic <- log(Qn) + c*log(log(n+p))*log(n)/n*df;
}
bicarr[i] <- computeBIC(x,y,muh,beta,i)
bicarr
for ( i in 1:length(karr)) {
k <- karr[i]
r <- Ckmeans.1d.dp(res[[1]],k)
muh <- r$centers[r$cluster]
bicarr[i] <- computeBIC(x,y,muh,beta,i)
}
plot(bicarr)
plot(bicarr[1:10])
computeBIC <- function(X, y, muh, betah, k, c = 10) {
s <- sum(abs(betah)>0)
n <- dim(X)[1]
p <- dim(X)[2]
Qn <- sum((y-muh-X%*%betah)^2)/n
df <- k+s;
bic <- log(Qn) + c*log(log(n+s))*log(n)/n*df;
}
n <- dim(x)[1]
p <- dim(x)[2]
kL <- 1
kU <- n-1
karr <- seq(kL,kU)
bicarr <- -1*rep(1,length(karr))
for ( i in 1:length(karr)) {
k <- karr[i]
r <- Ckmeans.1d.dp(res[[1]],k)
muh <- r$centers[r$cluster]
bicarr[i] <- computeBIC(x,y,muh,beta,i)
}
plot(bicarr[1:10])
r <- Ckmeans.1d.dp(res[[1]],3)
plot(r)
computeBIC <- function(X, y, muh, betah, k, c = 10) {
s <- sum(abs(betah)>0)
n <- dim(X)[1]
p <- dim(X)[2]
Qn <- sum((y-muh-X%*%betah)^2)/n
df <- k+s;
bic <- log(Qn) + c*log(log(n+s))*log(n)/n*df;
}
n <- dim(x)[1]
p <- dim(x)[2]
kL <- 1
kU <- n-1
karr <- seq(kL,kU)
bicarr <- -1*rep(1,length(karr))
for ( i in 1:length(karr)) {
k <- karr[i]
r <- Ckmeans.1d.dp(res[[1]],k)
muh <- r$centers[r$cluster]
bicarr[i] <- computeBIC(x,y,muh,beta,i)
}
plot(bicarr[1:10])
plot(bicarr[1:10])
r$cluster
computeBIC <- function(X, y, muh, betah, k, c = 10) {
s <- sum(abs(betah)>0)
n <- dim(X)[1]
p <- dim(X)[2]
Qn <- sum((y-muh-X%*%betah)^2)/n
df <- k+s;
bic <- log(Qn) + c*log(log(n+s))*log(n)/n*df;
return(bic)
}
n <- dim(x)[1]
p <- dim(x)[2]
kL <- 1
kU <- n-1
karr <- seq(kL,kU)
bicarr <- -1*rep(1,length(karr))
for ( i in 1:length(karr)) {
k <- karr[i]
r <- Ckmeans.1d.dp(res[[1]],k)
muh <- r$centers[r$cluster]
bicarr[i] <- computeBIC(x,y,muh,beta,i)
}
plot(bicarr[1:10])
?`Ckmeans.1d.dp-package`
ggplot(res, aes(x = ires, y = ..density..)) +
geom_histogram(fill = "cornsilk", colour = "grey60", size = 0.2)+ geom_density() + xlim(-2, 1) +
theme("bw")
x <- Real.2[,-c(1)] %>% apply(2, as.numeric)
y <- Real.2$y
cvfit <- cv.glmnet(x,y)
plot(cvfit)
beta <- coef(cvfit,s="lambda.min")
beta <- beta[2:length(beta)]
yhat <- x%*%beta
res = y - x %*% beta
res = res %>% as.data.frame
colnames(res) = "ires"
ggplot(res, aes(x = ires, y = ..density..)) +
geom_histogram(fill = "cornsilk", colour = "grey60", size = 0.2)+ geom_density() + xlim(-2, 1) +
theme("bw")
ggplot(res, aes(x = ires, y = ..density..)) +
geom_histogram(fill = "cornsilk", colour = "grey60", size = 0.2)+ geom_density() + xlim(-2, 1) +
theme_bw()
ggplot(res, aes(x = ires, y = ..density..)) +
geom_histogram(fill = "cornsilk", colour = "grey60", size = 0.2)+ geom_density() + xlim(-2, 1) +
theme_void()
ggplot(res, aes(x = ires, y = ..density..)) +
geom_histogram(fill = "cornsilk", colour = "grey60", size = 0.2)+ geom_density() + xlim(-2, 1) +
theme_minimal()
ggplot(res, aes(x = ires, y = ..density..)) +
geom_histogram(fill = "cornsilk", colour = "grey60", size = 0.2)+ geom_density() + xlim(-2, 1) +
theme_classic()
cl <- kmeans(res,2)
res$cluster <- cl$cluster
res1 <- res %>% as.data.frame() %>% filter(cl$cluster==1)
res2 <- res %>% as.data.frame() %>% filter(cl$cluster==2)
ggplot(res, aes(x = ires, y= ..density.., color = cluster, group = cluster))+
geom_histogram()+
geom_density(adjust=1.5) +
facet_wrap(~cluster) +
theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
axis.ticks.x=element_blank()
)
ggplot(res, aes(x = ires, color = cluster, group = cluster))+
geom_boxplot() +
coord_flip()+
theme_classic()
cl <- kmeans(res,2)
res$cluster <- cl$cluster
res1 <- res %>% as.data.frame() %>% filter(cl$cluster==1)
res2 <- res %>% as.data.frame() %>% filter(cl$cluster==2)
ggplot(res, aes(x = ires, y= ..density.., color = cluster, group = cluster))+
geom_histogram()+
geom_density(adjust=1.5) +
facet_wrap(~cluster) +
theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
axis.ticks.x=element_blank()
)+
theme_classic()
ggplot(res, aes(x = ires, color = cluster, group = cluster))+
geom_boxplot() +
coord_flip()+
theme_classic()
df <- data.frame(k = karr[1:10],
bic = bicarr[1:10])
df %>% ggplot(aes(x = k, y = bic))+
geom_point()
install.packages("scales")
install.packages("scales")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
options(warn = -1) # suppress warings globally
library(tidyverse)
library(glmnet)
library(PRIMsrc)
library(hrbrthemes)
library(Amelia) ## for missmap
library(viridis)
library(plotly)
library(Ckmeans.1d.dp)
df %>% ggplot(aes(x = k, y = bic))+
geom_point() +
scale_x_continuous(breaks= x)
x
df %>% ggplot(aes(x = k, y = bic))+
geom_point() +
scale_x_continuous(breaks= k[1:10])
df %>% ggplot(aes(x = k, y = bic))+
geom_point() +
scale_x_continuous(breaks= k[1:10]) +
theme_classic()
k[1:10]
k
df %>% ggplot(aes(x = k, y = bic))+
geom_point() +
scale_x_continuous(breaks= karr[1:10]) +
theme_classic()
computeBIC <- function(X, y, muh, betah, k, c = 10) {
s <- sum(abs(betah)>0)
n <- dim(X)[1]
p <- dim(X)[2]
Qn <- sum((y-muh-X%*%betah)^2)/n
df <- k+p;
bic <- log(Qn) + c*log(log(n+p))*log(n)/n*df;
return(bic)
}
n <- dim(x)[1]
p <- dim(x)[2]
kL <- 1
kU <- n-1
karr <- seq(kL,kU)
bicarr <- -1*rep(1,length(karr))
for ( i in 1:length(karr)) {
k <- karr[i]
r <- Ckmeans.1d.dp(res[[1]],k)
muh <- r$centers[r$cluster]
bicarr[i] <- computeBIC(x,y,muh,beta,i)
}
plot(bicarr[1:10])
df <- data.frame(k = karr[1:10],
bic = bicarr[1:10])
df %>% ggplot(aes(x = k, y = bic))+
geom_point() +
scale_x_continuous(breaks= karr[1:10]) +
theme_classic()
